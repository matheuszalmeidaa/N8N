{
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1056,
        512
      ],
      "id": "cc3b9d99-f168-4588-97a8-225f60a765aa",
      "name": "When clicking ‚ÄòExecute workflow‚Äô"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "operation": "send-image",
        "instanceName": "Matheus",
        "remoteJid": "={{ $json.numero_padronizado }}@s.whatsapp.net",
        "caption": "=Bom Dia {{ $json.Nome }}\n18/10 vamos estar na regi√£o de Ilh√©us com nosso delivery üì¶ \n\nDesejamos a voc√™ uma excelente  semana!  üì¶ Gostaria de reservar algum de nossos produtos? \n\nClique nesse link para acessar nosso cat√°logoüëáüèªüîó ** https://armazem-do-queijo.ola.click/products",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        64,
        432
      ],
      "id": "e269345f-c57b-4bf8-93ca-2726a535b524",
      "name": "Enviar imagem",
      "alwaysOutputData": false,
      "notesInFlow": false,
      "executeOnce": false,
      "credentials": {
        "evolutionApi": {
          "id": "Vt2MjiBepwghEZFo",
          "name": "Evolution account"
        }
      },
      "disabled": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -384,
        512
      ],
      "id": "010dd684-d08b-47bb-ad9a-d71a9ff6b57c",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        512,
        512
      ],
      "id": "96414de5-fddb-46c2-99c8-74ed828db349",
      "name": "Wait",
      "webhookId": "6db28f46-934f-4dcd-85b2-88ccfa88b43c"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7e3c4919-740d-4f57-a50d-0f1593aeb88a",
              "leftValue": "={{ $json['Enviados?'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -608,
        512
      ],
      "id": "6ce19b4d-c987-4181-9535-a0d298901f16",
      "name": "Filter",
      "notesInFlow": false,
      "alwaysOutputData": false
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -160,
        48
      ],
      "id": "a852c734-25c0-4bd0-abb0-2e31c64d58f5",
      "name": "Limit"
    },
    {
      "parameters": {
        "jsCode": "return $input.all().map(item => {\n  const numero = item.json.Contato?.toString().trim() || \"\";\n  let numero_padronizado;\n\n  if (numero.length === 8) {\n    numero_padronizado = \"5573\" + numero;\n  } else {\n    numero_padronizado = numero;\n  }\n\n  return {\n    json: {\n      ...item.json,\n      numero_padronizado\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -160,
        432
      ],
      "id": "3598038d-f25b-455b-9d34-2e012b3c63d5",
      "name": "Code"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        512,
        704
      ],
      "id": "e3e44ca7-5844-4f45-be42-e1d96086174f",
      "name": "Wait1",
      "webhookId": "7109327a-16bc-4ae1-a9f9-46e9f09404f4"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1rOgbEHWIX9I5XULIsFJTnHsh8pl7QkJYT4Z5huVGLis",
          "mode": "list",
          "cachedResultName": "Contatos Armaz√©m",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1rOgbEHWIX9I5XULIsFJTnHsh8pl7QkJYT4Z5huVGLis/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "P√°gina1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1rOgbEHWIX9I5XULIsFJTnHsh8pl7QkJYT4Z5huVGLis/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Enviados?": "={{ $json.error.message }}",
            "Contato": "={{ JSON.parse($json.error.details.split(' - ')[1]).response.message[0].number.replace(/@.*/, '') }}"
          },
          "matchingColumns": [
            "Contato"
          ],
          "schema": [
            {
              "id": "Nome",
              "displayName": "Nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Contato",
              "displayName": "Contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Enviados?",
              "displayName": "Enviados?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        288,
        528
      ],
      "id": "98f78db7-f93b-430d-a049-d86a4db7630a",
      "name": "Append or update row in sheet",
      "alwaysOutputData": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "TNo6dIWjylUsI9sB",
          "name": "Google Sheets account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1rOgbEHWIX9I5XULIsFJTnHsh8pl7QkJYT4Z5huVGLis",
          "mode": "list",
          "cachedResultName": "Contatos Armaz√©m",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1rOgbEHWIX9I5XULIsFJTnHsh8pl7QkJYT4Z5huVGLis/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Banco de Dados",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1rOgbEHWIX9I5XULIsFJTnHsh8pl7QkJYT4Z5huVGLis/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -832,
        512
      ],
      "id": "cf38ef72-07b1-402e-b8f5-24e06e3efa09",
      "name": "Banco de Dados",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "TNo6dIWjylUsI9sB",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1rOgbEHWIX9I5XULIsFJTnHsh8pl7QkJYT4Z5huVGLis",
          "mode": "list",
          "cachedResultName": "Contatos Armaz√©m",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1rOgbEHWIX9I5XULIsFJTnHsh8pl7QkJYT4Z5huVGLis/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Banco de Dados",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1rOgbEHWIX9I5XULIsFJTnHsh8pl7QkJYT4Z5huVGLis/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Enviados?": "Enviado",
            "Contato": "={{ $json.data.key.remoteJid.replace(/@.*/, '') }}"
          },
          "matchingColumns": [
            "Contato"
          ],
          "schema": [
            {
              "id": "Cidade",
              "displayName": "Cidade",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Nome",
              "displayName": "Nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Contato",
              "displayName": "Contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Enviados?",
              "displayName": "Enviados?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        288,
        336
      ],
      "id": "cab476d4-85c8-467f-9523-9963c816be37",
      "name": "Update row in sheet",
      "alwaysOutputData": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "TNo6dIWjylUsI9sB",
          "name": "Google Sheets account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1rOgbEHWIX9I5XULIsFJTnHsh8pl7QkJYT4Z5huVGLis",
          "mode": "list",
          "cachedResultName": "Contatos Armaz√©m",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1rOgbEHWIX9I5XULIsFJTnHsh8pl7QkJYT4Z5huVGLis/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Banco de Dados",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1rOgbEHWIX9I5XULIsFJTnHsh8pl7QkJYT4Z5huVGLis/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        64,
        144
      ],
      "id": "d7fbf78b-eca3-4423-8251-73f50f74efbb",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "TNo6dIWjylUsI9sB",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Processa todos os itens recebidos do Google Sheets\nconst items = $input.all();\n\n// Inicializa contadores\nlet totalRegistros = 0;\nlet totalEnviados = 0;\nlet totalErros = 0;\nlet listaErros = [];\n\n// Fun√ß√£o para validar formato do n√∫mero\nfunction validarNumero(contato) {\n  const contatoStr = String(contato || '').trim();\n  const problemas = [];\n  \n  // Remove espa√ßos para an√°lise\n  const numeroLimpo = contatoStr.replace(/\\s/g, '');\n  \n  // Verifica se tem caracteres especiais inv√°lidos\n  if (contatoStr.includes('+')) {\n    problemas.push('Cont√©m \"+\"');\n  }\n  if (contatoStr.includes('(') || contatoStr.includes(')')) {\n    problemas.push('Cont√©m \"()\"');\n  }\n  if (contatoStr.includes('-')) {\n    problemas.push('Cont√©m \"-\"');\n  }\n  \n  // Verifica se tem apenas n√∫meros\n  if (!/^\\d+$/.test(numeroLimpo)) {\n    problemas.push('Caracteres inv√°lidos');\n  }\n  \n  // Verifica o tamanho (padr√£o brasileiro: 5573 + 8 ou 9 d√≠gitos = 12 ou 13)\n  const tamanho = numeroLimpo.length;\n  if (tamanho < 12) {\n    problemas.push(`${tamanho} d√≠gitos (esperado 12-13)`);\n  } else if (tamanho > 13) {\n    problemas.push(`${tamanho} d√≠gitos (esperado 12-13)`);\n  }\n  \n  // Verifica se come√ßa com 55 (c√≥digo do Brasil)\n  if (!numeroLimpo.startsWith('55')) {\n    problemas.push('Sem c√≥digo 55');\n  }\n  \n  return {\n    valido: problemas.length === 0,\n    problemas: problemas\n  };\n}\n\n// Processa cada item\nitems.forEach(item => {\n  const row = item.json;\n  const status = row['Enviados?'] || '';\n  const contato = row.Contato || '';\n  \n  totalRegistros++;\n  \n  // Verifica se foi enviado com sucesso ou se teve erro\n  if (status.toLowerCase().includes('enviado')) {\n    totalEnviados++;\n  } else if (status.toLowerCase().includes('erro')) {\n    totalErros++;\n    \n    // Analisa o n√∫mero para identificar problemas\n    const analiseNumero = validarNumero(contato);\n    \n    listaErros.push({\n      linha: row.row_number,\n      nome: row.Nome,\n      contato: contato,\n      erro: status,\n      problemasNumero: analiseNumero.problemas,\n      numeroInvalido: !analiseNumero.valido\n    });\n  }\n});\n\n// Calcula a porcentagem de acerto\nconst porcentagemAcerto = totalRegistros > 0 \n  ? ((totalEnviados / totalRegistros) * 100).toFixed(2) \n  : 0;\n\nconst porcentagemErro = totalRegistros > 0 \n  ? ((totalErros / totalRegistros) * 100).toFixed(2) \n  : 0;\n\n// Data e hora atual formatada\nconst agora = new Date();\nconst dataHora = agora.toLocaleString('pt-BR', { \n  timeZone: 'America/Bahia',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Monta a mensagem do relat√≥rio\nlet mensagemRelatorio = `üìÖ *Disparo Ilh√©us ‚Äî Armaz√©m do Queijo*\\n`;\nmensagemRelatorio += `‚úÖ *Fluxo conclu√≠do com sucesso!*\\n\\n`;\nmensagemRelatorio += `üïê Finalizado em: ${dataHora}\\n\\n`;\nmensagemRelatorio += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\\n`;\nmensagemRelatorio += `üìä *ESTAT√çSTICAS DO ENVIO*\\n`;\nmensagemRelatorio += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\\n\\n`;\nmensagemRelatorio += `üìã Total de contatos: *${totalRegistros}*\\n`;\nmensagemRelatorio += `‚úÖ Enviados: *${totalEnviados}* (${porcentagemAcerto}%)\\n`;\nmensagemRelatorio += `‚ùå Erros: *${totalErros}* (${porcentagemErro}%)\\n\\n`;\n\n// Adiciona detalhes dos erros se houver\nif (totalErros > 0) {\n  mensagemRelatorio += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\\n`;\n  mensagemRelatorio += `‚ö†Ô∏è *DETALHES DOS ERROS*\\n`;\n  mensagemRelatorio += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\\n\\n`;\n  \n  listaErros.forEach((erro, index) => {\n    mensagemRelatorio += `${index + 1}. üì± ${erro.contato}\\n`;\n    mensagemRelatorio += `   ‚ùå ${erro.erro}\\n`;\n    \n    // Adiciona an√°lise do n√∫mero se houver problemas\n    if (erro.numeroInvalido && erro.problemasNumero.length > 0) {\n      mensagemRelatorio += `   üîç ${erro.problemasNumero.join(', ')}\\n`;\n    }\n    mensagemRelatorio += `\\n`;\n  });\n} else {\n  mensagemRelatorio += `üéâ *Todos os envios conclu√≠dos!*\\n\\n`;\n}\n\nmensagemRelatorio += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`;\n\n// Retorna o resultado\nreturn [\n  {\n    json: {\n      totalRegistros,\n      totalEnviados,\n      totalErros,\n      porcentagemAcerto: parseFloat(porcentagemAcerto),\n      porcentagemErro: parseFloat(porcentagemErro),\n      listaErros,\n      mensagemRelatorio,\n      dataHoraFinalizacao: dataHora,\n      timestamp: new Date().toISOString()\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        288,
        144
      ],
      "id": "715c2507-f732-4b7a-a041-62785b16da13",
      "name": "Code1"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Matheus",
        "remoteJid": "557398112304",
        "messageText": "={{ $json.mensagemRelatorio }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        512,
        144
      ],
      "id": "3f03cb7c-3861-48b9-987e-18571298b82c",
      "name": "Fluxo encerrado Eu",
      "credentials": {
        "evolutionApi": {
          "id": "Vt2MjiBepwghEZFo",
          "name": "Evolution account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Armaz√©m do Queijo",
        "remoteJid": "557399522731",
        "messageText": "=üìÖ Disparo Ilh√©us ‚Äî Armaz√©m do Queijo\n‚úÖ Fluxo conclu√≠do com sucesso!",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        64,
        -48
      ],
      "id": "43290870-ae80-42ed-9b20-859e11f93bfd",
      "name": "Fluxo encerrado M√¢e",
      "credentials": {
        "evolutionApi": {
          "id": "Vt2MjiBepwghEZFo",
          "name": "Evolution account"
        }
      },
      "disabled": true
    }
  ],
  "connections": {
    "When clicking ‚ÄòExecute workflow‚Äô": {
      "main": [
        [
          {
            "node": "Banco de Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar imagem": {
      "main": [
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Append or update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          },
          {
            "node": "Fluxo encerrado M√¢e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Enviar imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append or update row in sheet": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Banco de Dados": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Fluxo encerrado Eu",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "instanceId": "b34afefeccaafbecd055274ae7e23d91e7b424c24389ef44ab4220224cc053de"
  }
}
